{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,iGAAiG;AACjG,iGAAiG;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4GAA4G;AAC5G;AACA;AACA;AACA,4GAA4G;AAC5G,cAAc;AACd;AACA,4GAA4G;AAC5G;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,UAAU;AACV,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF;AACvF;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;;AChH8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,yGAAyG;AACzG,yGAAyG;AACzG;AACA;AACA;AACA;AACA;AACA,yGAAyG;AACzG,yGAAyG;AACzG,yGAAyG;AACzG,yGAAyG;AACzG,yGAAyG;AACzG;AACA;AACA,yGAAyG;AACzG,yGAAyG;AACzG;AACA,yGAAyG;AACzG;AACA;AACA;AACA,WAAW;AACX,yGAAyG;AACzG;AACA;AACA;AACA,uBAAuB,UAAU,MAAM,SAAS;AAChD,8CAA8C,UAAU;AACxD,4CAA4C,WAAW,IAAI,WAAW;AACtE;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;AACA;AACA,yGAAyG;AACzG;AACA;AACA,yGAAyG;AACzG;AACA;AACA;AACA;AACA,yGAAyG;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,+DAAW;AACd;AACA,yBAAyB,+BAA+B,8BAA8B,MAAM;AAC5F;AACA,UAAU;AACV,OAAO;AACP;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;ACnEgB,+DAA+D;AACrD;AAC9C;AACA;AACA;AACA;AACA,yGAAyG;AACzG;AACA,mGAAmG;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,uGAAuG;AACvG,mGAAmG;AACnG,mGAAmG;AACnG;AACA,mGAAmG;AACnG,mGAAmG;AACnG;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG;AACpG;AACA;AACA,mGAAmG;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,4DAAQ;AACjB,oGAAoG;AACpG;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,uGAAuG;AACvG,aAAa;AACb,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4GAA4G;AAC5G,MAAM,4CAAI,mHAAmH;AAC7H;AACA,4GAA4G;AAC5G,4GAA4G;AAC5G;AACA;AACA,qDAAqD;AACrD,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA,4GAA4G;AAC5G;AACA,4GAA4G;AAC5G;AACA;AACA;AACA,SAAS,6CAAK,sGAAsG;AACpH,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;AC1FpB,+FAA+F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F;AAC1F;AACA;AACA;AACA;AACA;AACA,sFAAsF;AACtF;AACA;AACA;AACA,sFAAsF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F;AAC5F;AACA;AACA,4FAA4F;AAC5F,qGAAqG;AACrG,MAAM;AACN;AACA;AACA;AACA;AACA,4FAA4F;AAC5F;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,6FAA6F;AAC7F;AACA,6FAA6F;AAC7F;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F;AAC/F;AACA,+FAA+F;AAC/F;AACA;AACA;AACA,+FAA+F;AAC/F;AACA;AACA;AACA,iEAAe,KAAK,EAAC,0EAA0E;AAChF;AACD;;;;;;;;;;;;;;;ACrEd,iBAAiB,qFAAqF;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wGAAwG;AACxG;AACA,qGAAqG;AACrG,qGAAqG;AACrG;AACA,qGAAqG;AACrG,8BAA8B,cAAc;AAC5C,gCAAgC,WAAW;AAC3C,KAAK;AACL;AACA;AACA;AACA;AACA,qGAAqG;AACrG;AACA;AACA,qGAAqG;AACrG;AACA;AACA,qGAAqG;AACrG,IAAI;AACJ;AACA;AACA;AACA,6FAA6F;AAC7F;AACA,QAAQ;AACR,6FAA6F;AAC7F;AACA;AACA,kDAAkD,OAAO;AACzD;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,mCAAmC,WAAW;AAC9C,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,QAAQ;AACR,6FAA6F;AAC7F;AACA;AACA,kDAAkD,OAAO;AACzD;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,mCAAmC,WAAW;AAC9C,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA,sCAAsC,WAAW;AACjD,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,IAAI;AACJ;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA,iEAAe,MAAM;;;;;;;;;;;;;;AC/JrB;AACA;AACA;AACA;AACA;AACA,6EAA6E;AAC7E;AACA;AACA;AACA;AACA,sDAAsD;AACtD,8DAA8D;AAC9D,UAAU;AACV;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iGAAiG;AACjG;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,OAAO;AACP;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;AC9CnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iGAAiG;AACjG;AACA,oBAAoB,IAAI;AACxB,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,gGAAgG;AAChG;AACA;AACA;AACA;AACA;AACA,6FAA6F;AAC7F;AACA,gGAAgG;AAChG;AACA;AACA;AACA,gGAAgG;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG;AAChG;AACA;AACA;AACA;AACA;AACA,0FAA0F;AAC1F;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;ACzDpB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,IAAI,YAAY,WAAW;AACpE;AACA;AACA;AACA;AACA;AACkB;;;;;;;UCxBlB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNa;AACb;AACkC;AACE;AACA;AACA;AACF;AACI;AACF;AACC;AACrC;AACA;AACA;AACA,oCAAoC,oDAAI;AACxC;AACA,GAAG,0DAAI;AACP,GAAG,0DAAK;AACR,GAAG,0DAAK;AACR,GAAG,0DAAK;AACR,GAAG,yDAAI;AACP,GAAG,2DAAM;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG,0DAAK;AACR,CAAC;AACD","sources":["webpack://projectfood/./src/js/modules/calc.js","webpack://projectfood/./src/js/modules/cards.js","webpack://projectfood/./src/js/modules/forms.js","webpack://projectfood/./src/js/modules/modal.js","webpack://projectfood/./src/js/modules/slider.js","webpack://projectfood/./src/js/modules/tabs.js","webpack://projectfood/./src/js/modules/timer.js","webpack://projectfood/./src/js/services/services.js","webpack://projectfood/webpack/bootstrap","webpack://projectfood/webpack/runtime/define property getters","webpack://projectfood/webpack/runtime/hasOwnProperty shorthand","webpack://projectfood/webpack/runtime/make namespace object","webpack://projectfood/./src/js/script.js"],"sourcesContent":["function calc() {\r\n   const result = document.querySelector('.calculating__result span');\r\n   \r\n   let sex, height, weight, age, ratio;\r\n\r\n   if(localStorage.getItem('sex')) {\r\n      sex = localStorage.getItem('sex');\r\n   } else {\r\n      sex = 'female';\r\n      localStorage.setItem('sex', 'female');\r\n   }\r\n\r\n   if(localStorage.getItem('ratio')) {\r\n      sex = localStorage.getItem('ratio');\r\n   } else {\r\n      ratio = 1.375;\r\n      localStorage.setItem('ratio', 1.375);\r\n   }\r\n\r\n\r\n\r\n   function init (selector, activeClass) {                                    // для localStorage, чтобы при заходе на страницу цеплялся localStorage\r\n      const elements = document.querySelectorAll(selector);\r\n\r\n      elements.forEach(elem => {\r\n         elem.classList.remove(activeClass);\r\n         \r\n         if(elem.getAttribute('id') === localStorage.getItem('sex')) {\r\n            elem.classList.add(activeClass);\r\n         }\r\n         if(elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n            elem.classList.add(activeClass);\r\n         }\r\n      });\r\n   }\r\n\r\n   init('#gender div', 'calculating__choose-item_active');                                       // вызываем функцию для блока gender\r\n   init('.calculating__choose_big div', 'calculating__choose-item_active');                      // для блока с активностью\r\n\r\n   function calc() {\r\n      if(!sex || !height || !weight || !age || !ratio) {\r\n         result.textContent = '---';\r\n         return;\r\n      }\r\n\r\n      if(sex === 'female') {\r\n         result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n      } else {\r\n         result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n      }\r\n   }\r\n   calc();\r\n   \r\n\r\n   function getStaticInfo (selector, activeClass) {\r\n      const elements = document.querySelectorAll(selector);\r\n\r\n      elements.forEach((elem) => {                                                                          // делегирование событий тут не подходит, т.к. есть баг при клике\r\n         elem.addEventListener('click', (event) => {\r\n            if (event.target.getAttribute('data-ratio')) {\r\n               ratio = +event.target.getAttribute('data-ratio');\r\n               localStorage.setItem('ratio', +event.target.getAttribute('data-ratio'));                     // записать значение в localStorage \r\n            } else {\r\n               sex = event.target.getAttribute('id');\r\n               localStorage.setItem('sex', event.target.getAttribute('id'));                                // записать значение в localStorage\r\n            }\r\n   \r\n            elements.forEach(elem => {\r\n               elem.classList.remove(activeClass);\r\n            });\r\n   \r\n            event.target.classList.add(activeClass);\r\n            calc();\r\n         });\r\n      });\r\n   }\r\n\r\n   getStaticInfo('#gender div', 'calculating__choose-item_active');\r\n   getStaticInfo('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n\r\n   function getInput(selector) {\r\n      const input = document.querySelector(selector);\r\n\r\n      input.addEventListener('input', () => {\r\n\r\n         if(input.value.match(/\\D/)) {                                                 // делать красную рамку, если будет любой символ кроме числа\r\n            input.style.border = '1px solid red';\r\n         } else {\r\n            input.style.border = 'none';\r\n         }\r\n\r\n         switch(input.getAttribute('id')) {\r\n            case 'height':\r\n               height = +input.value;\r\n               break;\r\n            case 'weight':\r\n               weight = +input.value;\r\n               break;\r\n            case 'age':\r\n               age = +input.value;\r\n               break;\r\n         }\r\n         calc();\r\n      });\r\n   }\r\n\r\n   getInput('#height');\r\n   getInput('#weight');\r\n   getInput('#age');\r\n}\r\n\r\nexport default calc;","import {getResource} from '../services/services';\r\n\r\nfunction cards() {\r\n   // Классы для карточек\r\n\r\n\r\n   class AddCart {\r\n      constructor(cardNum, img, name, descr, price, alt, ...classes) {                                   // ...classes - это rest (остальные знпчения перю в массив)\r\n         this.img = img;                                                                                 // Это называется свойства\r\n         this.name = name;\r\n         this.descr = descr;\r\n         this.price = price;\r\n         this.alt = alt;\r\n         this.classes = classes;\r\n         this.cart = document.querySelector(cardNum);                                                    // Сюда выбираем класс к которму цепляемся (DOM)\r\n         this.valute = 27;                                                                               // Это множитель для валюты (опционально)\r\n         // this.removePrevious();                                                                       // Удаляем другие карточки (опционально)\r\n         this.changeValute();                                                                            // Вызываем методы здесь или когда создаем новый\r\n         this.changeHtml();                                                                              //    класс через точку\r\n      }\r\n\r\n      changeHtml() {                                                                                     // Это называется методы\r\n         const element = document.createElement('div');                                                  // Создаем новый див, в него записываем Html содерж.\r\n\r\n         if (this.classes.length === 0) {                                                                // Создаем дефолтное значение, если длина ...classes = 0, т.е. нет вообще классов,\r\n            // тогда присваеваем menu__item\r\n            this.element = 'menu__item';\r\n            element.classList.add(this.element);\r\n         } else {\r\n            this.classes.forEach(className => element.classList.add(className));                         // Делаем, чтобы новые классы из ...classes добавлялись как класссы к диву\r\n         }\r\n\r\n         element.innerHTML = `\r\n            <img src=${this.img} alt=${this.alt}>\r\n            <h3 class=\"menu__item-subtitle\">${this.name}</h3>\r\n            <div class=\"menu__item-descr\">${this.name} - ${this.descr}</div>\r\n            <div class=\"menu__item-divider\"></div>\r\n            <div class=\"menu__item-price\">\r\n               <div class=\"menu__item-cost\">Цена:</div>\r\n               <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n            </div>\r\n         `;\r\n         this.cart.append(element);                                                                      // Закидываем див в конец родителя (добавл. +1)\r\n      }\r\n\r\n      changeValute() {                                                                                   // Перевод из валюты (тупо умнож. на коэф.) \r\n         this.price = +this.price * this.valute;\r\n      }\r\n\r\n      removePrevious() {\r\n         this.cart.innerHTML = '';                                                                       // Удаляем другие карточки (из html)\r\n      }\r\n   }\r\n\r\n\r\n\r\n   // Подключаем базу данных вместо рукописного ниже текста \r\n\r\n   getResource('http://localhost:3000/menu')\r\n      .then(data => {\r\n         data.forEach(({ img, title, descr, price, alt }) => {                        // {} - это деструктуризация объекта, т.е. сразу подстановка свойств\r\n            new AddCart('.menu__field .container', img, title, descr, price, alt);\r\n         });\r\n      });\r\n\r\n}\r\n\r\nexport default cards;","import {close, open} from './modal';                                                               // в этом коде используются функции close и open из другого файла, поэтому импортируем\r\nimport {postData} from '../services/services';\r\n\r\nfunction forms(formSelector, timeOut) {\r\n   // Forms\r\n\r\n   const forms = document.querySelectorAll(formSelector);                                                // Т.к. форм несколько сделаем отд. функцию для отправки\r\n\r\n   const message = {                                                                               // Объект, чтобы выводить сообщения на экран пользователю\r\n      loading: '/src/img/form/spinner.svg',\r\n      sucsess: 'Все загружено',\r\n      fail: 'Что-то пошло не так'\r\n   }\r\n\r\n   forms.forEach(item => {\r\n      bindPostData(item);\r\n   });\r\n\r\n\r\n\r\n   function bindPostData(form) {                                                                       // Потом просто будем вызывать функцию для отправки\r\n      form.addEventListener('submit', (event) => {                                                 // submit в событии - если будет отправка формы\r\n         event.preventDefault();                                                                   // чтобы не было перезагрузки страницы\r\n\r\n         const statusMessage = document.createElement('img');                                      // Создаем элемент + клсс + выводим сообщение из объекта выше\r\n         statusMessage.src = message.loading;                                                      // создаем + задаем одновременно атрибут src и добавляем css текст\r\n         statusMessage.style.cssText = `\r\n            display: block;\r\n            margin: 0 auto;\r\n         `;\r\n\r\n         // form.append(statusMessage);\r\n         form.insertAdjacentElement('afterend', statusMessage);                                     // более гибкий метод, чем выше, чтобы закинуть файл не в конец формы, а сразу полсе нее\r\n\r\n\r\n         const formData = new FormData(form);                                                      // Значение формы, которое ввел пользователь формируется для сервера \r\n         //(обязательно у input и др. должно быть заполнено name='', иначе работать не будет)\r\n\r\n\r\n\r\n         // Преобразить formData в JSON (преобразовать данные полученные с формы на сайте в JSON файл)\r\n         const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n\r\n         postData('http://localhost:3000/requests', json)\r\n            .then(data => {                                                                         // then будет, т.к. fetch возвращает promise и это будет вместо request.addEventListener('load', () из кода выше \r\n               console.log(data);\r\n               showThanksModal(message.sucsess);\r\n               statusMessage.remove();\r\n            }).catch(() => {\r\n               showThanksModal(message.fail);\r\n            }).finally(() => {\r\n               form.reset();                                                                           // Очистить форму после успеха\r\n            })\r\n      });\r\n   }\r\n\r\n\r\n\r\n   // Оповещение об успехе или провале в модальном окне\r\n\r\n   function showThanksModal(message) {\r\n      const prevModalDialog = document.querySelector('.modal__dialog');\r\n\r\n      prevModalDialog.classList.add('hide');                                                                // скрываем контент на старом модальном окне\r\n      open('.modal', timeOut);                                                                                               // открываем модальное окно\r\n\r\n      const thanksModal = document.createElement('div');                                                    // создаем див\r\n      thanksModal.classList.add('modal__dialog');                                                           // добавляем ему клас как у старого и наполняем новым контенктом\r\n      thanksModal.innerHTML = `                                                                             \r\n      <div class = \"modal__content\">\r\n         <div data-close class=\"modal__close\">&times;</div>\r\n         <div class=\"modal__title\">${message}</div>\r\n      </div>\r\n      `;\r\n\r\n      document.querySelector('.modal').append(thanksModal);                                                 // находим модальное окно, и закидываем новое в конец\r\n\r\n      setTimeout(() => {                                                                                    // чтобы новое меню убиралось через 4 секунды\r\n         thanksModal.remove();\r\n         prevModalDialog.classList.add('show');\r\n         prevModalDialog.classList.remove('hide');\r\n         close('.modal');                                                                                           // закроем окно, чтобы не мешало\r\n      }, 2000);\r\n   }\r\n\r\n   fetch('http://localhost:3000/menu ')\r\n      .then(data => data.json())\r\n   // .then(res => console.log(res));\r\n}\r\n\r\nexport default forms;","function open(modalSelector, timeOut) {                                                        // Вынес в функцию элементы, которые внутри события выше\r\n   const modal = document.querySelector(modalSelector);\r\n   modal.classList.add('show');\r\n   modal.classList.remove('hide');\r\n   document.body.style.overflow = 'hidden';\r\n\r\n   console.log(timeOut);\r\n   if (timeOut) {\r\n      clearInterval(timeOut);                                                             // Если польз. сам открыл мод. окно, оно через время само не будет всплывать\r\n   }\r\n}\r\n\r\n\r\n\r\nfunction close(modalSelector) {                                                       // Чтобы не повторять одно и то же, делаем функц. и подст. ее\r\n   const modal = document.querySelector(modalSelector);                             \r\n   modal.classList.add('hide');\r\n   modal.classList.remove('show');\r\n   document.body.style.overflow = '';                                                 // возвращаем прокрутку сайта, когда модальное окно закрыто \r\n}\r\n\r\n\r\n\r\nfunction modal(modalSelector, triggerSelector, timeOut) {\r\n     // Модальное окно\r\n\r\n     const modal = document.querySelector(modalSelector);\r\n     const modalOpen = document.querySelectorAll(triggerSelector);\r\n     // const modalClose = document.querySelector('[data-close]');                          // Изменим код, чтобы крестик закрытия мог закрываться и у элементов ниже по коду\r\n  \r\n  \r\n     modalOpen.forEach((element) => {                                                       // сокращенный вариант верхнего\r\n        element.addEventListener('click', () => open(modalSelector, timeOut));                       // open не должна вызывать тут функцию(в обработчиках события) т.е. без (), но нам нужно передать переменную, поэтому делаем через () => open(xxx)\r\n     })\r\n\r\n  \r\n     // Закрытие окна на Escape\r\n     document.addEventListener('keyup', (event) => {\r\n        if (event.code === 'Escape' && modal.classList.contains('show')) {                  // выполнить если нажат Escape и если у modal есть класс show\r\n           close(modalSelector);\r\n        }\r\n     });\r\n  \r\n  \r\n     // Закрытие окна на клик за модальное окно (добавлено: или на крестик)\r\n     modal.addEventListener('click', (event) => {                                            // В css modal - родитель окна, он имеет ширину и высоту 100%, а следующая обертка за ним\r\n        // уже фиксированные ширину и высоту => клакая на окно мы кликаем на дочку а не на родителя\r\n        if (event.target === modal || event.target.getAttribute('data-close') == '') {       // ... || event.target... - или если есть атрибут data-close (это наш крестик)\r\n           close(modalSelector);\r\n        }\r\n     });\r\n  \r\n  \r\n  \r\n     // Открытие модального окна при скролле в самый низ\r\n     function scrollModal() {\r\n        if (window.pageYOffset + document.documentElement.clientHeight >=                       // если ширина прокручиваемая + ширина экрана >= всей ширине\r\n           document.documentElement.scrollHeight) {                                            // тогда выполнить код:\r\n           open(modalSelector, timeOut);\r\n           window.removeEventListener('scroll', scrollModal);                                  // после выполнения 1 раз удаляем обраб. события\r\n        }\r\n     }\r\n  \r\n     window.addEventListener('scroll', scrollModal);                                           // При любом скролле вызывается функция выше\r\n   \r\n}\r\n\r\nexport default modal;                                                                          // Основной экспорт\r\nexport {close};\r\nexport {open};\r\n","function slider({container, slide, nextArrow, prevArrow, totalCounter, currentCounter, wrapper, field}) {\r\n   // Slider\r\n\r\n   const slides = document.querySelectorAll(slide),\r\n         prev = document.querySelector(prevArrow),\r\n         next = document.querySelector(nextArrow),\r\n         current = document.querySelector(currentCounter),\r\n         total = document.querySelector(totalCounter),\r\n         slidesWrapper = document.querySelector(wrapper),\r\n         slideField = document.querySelector(field),\r\n         width = window.getComputedStyle(slidesWrapper).width;                                          // вытащить ширину объект\r\n   \r\n   let slideIndex = 1;                                                                               // нужен для счетчика слайдов\r\n   let offset = 0;                                                                                   // отступ вправо или лево при работе транзишена\r\n\r\n   if (slides.length < 10) {                                                                         // счетчик слайдов\r\n      total.textContent = `0${slides.length}`;\r\n      current.textContent = `0${slideIndex}`;\r\n   } else {\r\n      total.textContent = slides.length;\r\n      current.textContent = slideIndex;\r\n   }\r\n\r\n   slideField.style.width = 100 * slides.length + '%';                                               // задаем ширину равной вмем слайдам через % и другие настроки для списка и плавности\r\n   slideField.style.display = 'flex';\r\n   slideField.style.transition = '0.5s all';\r\n   slidesWrapper.style.overflow = 'hidden';                                                          // задаем сокрытие элементов, выходящих за границы wrapper\r\n\r\n   slides.forEach(slide => {\r\n      slide.style.width = width;                                                                     // задаем ширину всем элементам одинаковую, полученную с wrapper\r\n   })\r\n\r\n\r\n   next.addEventListener('click', () => {\r\n      if (offset == +width.replace(/\\D/g, '') * (slides.length - 1)) {                       // если клик вперед при последнем слайде - вернуть оффсет на 0 (первый слайд)\r\n         offset = 0;\r\n      } else {\r\n         offset += +width.replace(/\\D/g, '');                                                // иначе - просто дабавить 1 слайд\r\n      }\r\n\r\n      slideField.style.transform = `translateX(-${offset}px)`\r\n\r\n      if (slideIndex == slides.length) {\r\n         slideIndex = 1;\r\n      } else {\r\n         slideIndex++;     \r\n      }\r\n\r\n      if (slides.length < 10) {\r\n         current.textContent = `0${slideIndex}`;\r\n      } else {\r\n         current.textContent = slideIndex;\r\n      }\r\n\r\n      dots.forEach(dot => dot.style.opacity = '0.5');\r\n      dots[slideIndex - 1].style.opacity = '1';\r\n   });\r\n\r\n   prev.addEventListener('click', () => {\r\n      if (offset == 0) {\r\n          offset = +width.replace(/\\D/g, '') * (slides.length - 1);\r\n      } else {\r\n         offset -= +width.replace(/\\D/g, '');                                                // иначе - отнять оффсет 1 слайда\r\n      }\r\n\r\n      slideField.style.transform = `translateX(-${offset}px)`\r\n\r\n      if (slideIndex == 1) {\r\n         slideIndex = slides.length;\r\n      } else {\r\n         slideIndex--;\r\n      }\r\n\r\n      if (slides.length < 10) {\r\n         current.textContent = `0${slideIndex}`;\r\n      } else {\r\n         current.textContent = slideIndex;\r\n      }\r\n\r\n      dots.forEach(dot => dot.style.opacity = '0.5');\r\n      dots[slideIndex - 1].style.opacity = '1';\r\n   });\r\n\r\n\r\n\r\n   //_________________________________________________ navigation dots____________________________________________________\r\n\r\n   const slider = document.querySelector(container);   \r\n   slider.style.position = 'relative';                                        // делаем релатив\r\n   const indicators = document.createElement('ol');\r\n   indicators.classList.add('carousel-indicators');\r\n   const dots = [];\r\n\r\n   indicators.style.cssText = `\r\n      position: absolute;\r\n      right: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      z-index: 15;\r\n      display: flex;\r\n      justify-content: center;\r\n      margin-right: 15%;\r\n      margin-left: 15%;\r\n      list-style: none;\r\n   `;\r\n   slider.append(indicators);\r\n\r\n   for (let i = 0; i < slides.length; i++) {\r\n      const dot = document.createElement('li');\r\n      dot.setAttribute('data-slide-to', i + 1);                            // задаем атрибуты со значением с цифрой от цикла for\r\n      dot.style.cssText = `\r\n         box-sizing: content-box;\r\n         flex: 0 1 auto;\r\n         width: 30px;\r\n         height: 6px;\r\n         margin-right: 3px;\r\n         margin-left: 3px;\r\n         cursor: pointer;\r\n         background-color: #fff;\r\n         background-clip: padding-box;\r\n         border-top: 10px solid transparent;\r\n         border-bottom: 10px solid transparent;\r\n         opacity: .5;\r\n         transition: opacity .6s ease;\r\n      `;\r\n      if (i == 0) {\r\n         dot.style.opacity = '1';\r\n      }\r\n      indicators.append(dot);\r\n      dots.push(dot);                                                     // пушим точки в созданный пустой массив\r\n   }\r\n\r\n\r\n\r\n   dots.forEach(dot => {\r\n      dot.addEventListener('click', (e) => {\r\n         const slideTo = e.target.getAttribute('data-slide-to');\r\n\r\n         slideIndex = slideTo;\r\n         offset = rep(width) * (slideTo - 1);\r\n\r\n         slideField.style.transform = `translateX(-${offset}px)`;\r\n\r\n         if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n         } else {\r\n            current.textContent = slideIndex;\r\n         }\r\n\r\n         dots.forEach(dot => dot.style.opacity = '0.5');\r\n         dots[slideIndex - 1].style.opacity = '1';\r\n      })\r\n   })\r\n\r\n   function rep(item) {                                                    // сделал функцию по замене рег. выражения для обрезания 200px до числа 200\r\n      return item.replace(/\\D/g, '')\r\n   };\r\n}\r\n\r\nexport default slider;","function tabs(tabsSelector, tabsContentSelector, tabsParentSelector, activeClass) {\r\n      //Tabs\r\n\r\n      const tabs = document.querySelectorAll(tabsSelector);\r\n      const tabsContent = document.querySelectorAll(tabsContentSelector);\r\n      const tabsParent = document.querySelector(tabsParentSelector);         // родитель табов, для делегирования\r\n   \r\n   \r\n      function hideTabContent() {\r\n         tabsContent.forEach(item => {\r\n            item.classList.add('hide');               // чтобы скрыть все элементы - довавляем класс, который скрывает элементы через styleAdd - новый css\r\n            item.classList.remove('show', 'fade');            // и дописываем remode показывающий, чтобы он удалялся, если был это этого. Fade - анимация\r\n         });\r\n   \r\n         tabs.forEach(item => {\r\n            item.classList.remove(activeClass);\r\n         });\r\n      }\r\n   \r\n   \r\n      function showTabContent(i = 0) {\r\n         tabsContent[i].classList.add('show', 'fade');      // наоборот от верхнего\r\n         tabsContent[i].classList.remove('hide');\r\n         tabs[i].classList.add(activeClass);\r\n      }\r\n   \r\n   \r\n   \r\n      hideTabContent();\r\n      showTabContent();\r\n   \r\n   \r\n   \r\n      tabsParent.addEventListener('click', (event) => {\r\n         const target = event.target;\r\n         if (target && target.classList.contains(tabsSelector.slice(1))) {                       // Тут не нужна точка в аргументе, слайсим - убираем перый символ\r\n            tabs.forEach((item, i) => {\r\n               if (target == item) {\r\n                  hideTabContent();\r\n                  showTabContent(i);\r\n               }\r\n            });\r\n         }\r\n      });\r\n}\r\n\r\nexport default tabs;","function timer(id, deadline) {\r\n   // Timer\r\n\r\n   function getTimeRemaning(endtime) {\r\n      const t = Date.parse(endtime) - Date.parse(new Date()),                                   // Date.parse - для работы со строкой deadline (упрощенный вариант)\r\n         days = Math.floor(t / (1000 * 3600 * 24)),\r\n         hours = Math.floor(t / (1000 * 3600) % 24),                                         // Взятие остатка от деления % (часов не должно быть больше 24 =)\r\n         mitutes = Math.floor(t / (1000 * 60) % 60),\r\n         seconds = Math.floor(t / (1000) % 60);\r\n\r\n      return {                                                                                  // возвращаем переменные из функции, чтобы работать с ними ниже\r\n         'total': t,\r\n         'days': days,\r\n         'hours': hours,\r\n         'minutes': mitutes,\r\n         'seconds': seconds\r\n      };\r\n   }\r\n\r\n   function getZero(num) {                                                                       // Функция, чтобы перед цифрами в 1 строку ставился \"0\"\r\n      if (num >= 0 && num < 10) {\r\n         return `0${num}`;\r\n      } else {\r\n         return num;\r\n      }\r\n   }\r\n\r\n\r\n   function setClock(selector, endtime) {                                                       // Находим и задаем переменные в html\r\n      const timer = document.querySelector(selector),\r\n         days = timer.querySelector('#days'),\r\n         hours = timer.querySelector('#hours'),\r\n         minutes = timer.querySelector('#minutes'),\r\n         seconds = timer.querySelector('#seconds'),\r\n         timeInterval = setInterval(updateClock, 1000);                                      // Также задаем интервал обновления функции по смене чисел\r\n\r\n      updateClock();                                                                            /* Вызываем ее заранее здесь, чтобы если обновлять странцицу старые цифры не лагали \r\n                                                                                                   и их не было видно 1 секунду, т.к. setInterval стоит в 1сек. и пока она пре пройдет, \r\n                                                                                                   старые цифры на новые не поменяются. Т.е. просто принудительно вызываем функ. заранее */\r\n\r\n      function updateClock() {                                                                  // Функция по замене переменных из функции в начале на переменные из html\r\n         const t = getTimeRemaning(endtime);\r\n\r\n         days.innerHTML = getZero(t.days);\r\n         hours.innerHTML = getZero(t.hours);\r\n         minutes.innerHTML = getZero(t.minutes);\r\n         seconds.innerHTML = getZero(t.seconds);\r\n\r\n         if (t.total <= 0) {                                                                    // Остановка таймера когда наступен дата окончания\r\n            clearInterval(timeInterval);\r\n         }\r\n      }\r\n   }\r\n\r\n   setClock(id, deadline);                                                                // Запуск всего\r\n}\r\n\r\nexport default timer;","const postData = async (url, data) => {\r\n   const res = await fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n         'Content-type': 'application/json'\r\n      },\r\n      body: data\r\n   });\r\n\r\n   return await res.json();\r\n};\r\n\r\n// Убрать вручную написанные карточки (ниже) и забирать их из бызы нанных (db.json и со включенным json-server)\r\n\r\nconst getResource = async (url) => {\r\n   const res = await fetch(url);\r\n\r\n   if (!res.ok) {\r\n      throw new Error(`Could not fetch ${url}, statys: ${res.status}`);\r\n   }\r\n\r\n   return await res.json();\r\n}\r\n\r\nexport {postData};\r\nexport {getResource};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","'use strict';\r\n\r\nimport tabs from './modules/tabs';\r\nimport modal from './modules/modal';\r\nimport timer from './modules/timer';\r\nimport cards from './modules/cards';\r\nimport calc from './modules/calc';\r\nimport slider from './modules/slider';\r\nimport forms from './modules/forms';\r\nimport {open} from './modules/modal';\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n   // Вызов модального окна через n милисекунд\r\n   const timeOut = setTimeout(() => open('.modal', timeOut), 500000)\r\n\r\n   tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active'); \r\n   modal('.modal', '[data-open]', timeOut); \r\n   timer('.timer', '2022-06-01T00:00:00');\r\n   cards(); \r\n   calc(); \r\n   slider({\r\n      container: '.offer__slider',\r\n      slide: '.offer__slide',\r\n      nextArrow: '.offer__slider-next',\r\n      prevArrow: '.offer__slider-prev',\r\n      totalCounter: '#total',\r\n      currentCounter: '#current',\r\n      wrapper: '.offer__slider-wrapper',\r\n      field: '.offer__slider-inner'\r\n   }); \r\n   forms('form', timeOut); \r\n});\r\n\r\n"],"names":[],"sourceRoot":""}